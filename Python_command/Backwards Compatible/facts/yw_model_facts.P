% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'BCLinearOriginalOR#', 'BCLinearOriginalOR#', 1, 69).
program(2, 'core/column-rename0#', 'BCLinearOriginalOR#/core/column-rename0#', 17, 23).
program(3, 'core/mass-edit0', 'BCLinearOriginalOR#/core/mass-edit0', 24, 32).
program(4, 'core/text-transform0#', 'BCLinearOriginalOR#/core/text-transform0#', 33, 39).
program(5, 'core/text-transform1#', 'BCLinearOriginalOR#/core/text-transform1#', 40, 46).
program(6, 'core/column-split0#', 'BCLinearOriginalOR#/core/column-split0#', 47, 54).
program(7, 'core/text-transform2#', 'BCLinearOriginalOR#/core/text-transform2#', 55, 61).
program(8, 'core/text-transform3#', 'BCLinearOriginalOR#/core/text-transform3#', 62, 68).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).
has_subprogram(1, 4).
has_subprogram(1, 5).
has_subprogram(1, 6).
has_subprogram(1, 7).
has_subprogram(1, 8).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'param', 'col-name:call_number', 'BCLinearOriginalOR#<-col-name:call_number', 3, 1).
port(2, 'param', 'oldColumnName:sponsor', 'BCLinearOriginalOR#<-oldColumnName:sponsor', 4, 2).
port(3, 'param', 'removeOriginalColumn:true', 'BCLinearOriginalOR#<-removeOriginalColumn:true', 5, 3).
port(4, 'param', 'expression:value.toDate()', 'BCLinearOriginalOR#<-expression:value.toDate()', 6, 4).
port(5, 'param', 'expression:value.toLowercase()', 'BCLinearOriginalOR#<-expression:value.toLowercase()', 7, 5).
port(6, 'param', 'col-name:dish_count', 'BCLinearOriginalOR#<-col-name:dish_count', 8, 6).
port(7, 'param', 'col-name:Sponsor', 'BCLinearOriginalOR#<-col-name:Sponsor', 9, 7).
port(8, 'param', 'col-name:date', 'BCLinearOriginalOR#<-col-name:date', 10, 8).
port(9, 'param', 'newColumnName:Sponsor', 'BCLinearOriginalOR#<-newColumnName:Sponsor', 11, 9).
port(10, 'param', 'expression:value.toNumber()', 'BCLinearOriginalOR#<-expression:value.toNumber()', 12, 10).
port(11, 'param', 'separator:"-"', 'BCLinearOriginalOR#<-separator:"-"', 13, 11).
port(12, 'param', 'expression:value.trim()', 'BCLinearOriginalOR#<-expression:value.trim()', 14, 12).
port(13, 'in', 'table0', 'BCLinearOriginalOR#<-table0', 15, 13).
port(14, 'out', 'table7', 'BCLinearOriginalOR#->table7', 16, 14).
port(15, 'param', 'oldColumnName:sponsor', 'BCLinearOriginalOR#/core/column-rename0#<-oldColumnName:sponsor', 19, 15).
port(16, 'param', 'newColumnName:Sponsor', 'BCLinearOriginalOR#/core/column-rename0#<-newColumnName:Sponsor', 20, 16).
port(17, 'in', 'table0', 'BCLinearOriginalOR#/core/column-rename0#<-table0', 21, 17).
port(18, 'out', 'table1', 'BCLinearOriginalOR#/core/column-rename0#->table1', 22, 18).
port(19, 'param', 'col-name:Sponsor', 'BCLinearOriginalOR#/core/mass-edit0<-col-name:Sponsor', 26, 19).
port(20, 'param', 'cluster-type:binning', 'BCLinearOriginalOR#/core/mass-edit0<-cluster-type:binning', 27, 20).
port(21, 'param', 'cluster-params:20', 'BCLinearOriginalOR#/core/mass-edit0<-cluster-params:20', 28, 21).
port(22, 'param', 'cluster-function:fingerprint', 'BCLinearOriginalOR#/core/mass-edit0<-cluster-function:fingerprint', 29, 22).
port(23, 'in', 'table1', 'BCLinearOriginalOR#/core/mass-edit0<-table1', 30, 18).
port(24, 'out', 'table2', 'BCLinearOriginalOR#/core/mass-edit0->table2', 31, 23).
port(25, 'param', 'col-name:Sponsor', 'BCLinearOriginalOR#/core/text-transform0#<-col-name:Sponsor', 35, 19).
port(26, 'param', 'expression:value.trim()', 'BCLinearOriginalOR#/core/text-transform0#<-expression:value.trim()', 36, 24).
port(27, 'in', 'table2', 'BCLinearOriginalOR#/core/text-transform0#<-table2', 37, 23).
port(28, 'out', 'table3', 'BCLinearOriginalOR#/core/text-transform0#->table3', 38, 25).
port(29, 'param', 'col-name:Sponsor', 'BCLinearOriginalOR#/core/text-transform1#<-col-name:Sponsor', 42, 19).
port(30, 'param', 'expression:value.toLowercase()', 'BCLinearOriginalOR#/core/text-transform1#<-expression:value.toLowercase()', 43, 26).
port(31, 'in', 'table3', 'BCLinearOriginalOR#/core/text-transform1#<-table3', 44, 25).
port(32, 'out', 'table4', 'BCLinearOriginalOR#/core/text-transform1#->table4', 45, 27).
port(33, 'param', 'col-name:call_number', 'BCLinearOriginalOR#/core/column-split0#<-col-name:call_number', 49, 28).
port(34, 'param', 'separator:"-"', 'BCLinearOriginalOR#/core/column-split0#<-separator:"-"', 50, 29).
port(35, 'param', 'removeOriginalColumn:true', 'BCLinearOriginalOR#/core/column-split0#<-removeOriginalColumn:true', 51, 30).
port(36, 'in', 'table4', 'BCLinearOriginalOR#/core/column-split0#<-table4', 52, 27).
port(37, 'out', 'table5', 'BCLinearOriginalOR#/core/column-split0#->table5', 53, 31).
port(38, 'param', 'col-name:dish_count', 'BCLinearOriginalOR#/core/text-transform2#<-col-name:dish_count', 57, 32).
port(39, 'param', 'expression:value.toNumber()', 'BCLinearOriginalOR#/core/text-transform2#<-expression:value.toNumber()', 58, 33).
port(40, 'in', 'table5', 'BCLinearOriginalOR#/core/text-transform2#<-table5', 59, 31).
port(41, 'out', 'table6', 'BCLinearOriginalOR#/core/text-transform2#->table6', 60, 34).
port(42, 'param', 'col-name:date', 'BCLinearOriginalOR#/core/text-transform3#<-col-name:date', 64, 35).
port(43, 'param', 'expression:value.toDate()', 'BCLinearOriginalOR#/core/text-transform3#<-expression:value.toDate()', 65, 36).
port(44, 'in', 'table6', 'BCLinearOriginalOR#/core/text-transform3#<-table6', 66, 34).
port(45, 'out', 'table7', 'BCLinearOriginalOR#/core/text-transform3#->table7', 67, 37).

% FACT: port_alias(port_id, alias).

% FACT: port_uri_template(port_id, uri).

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(1, 3).
has_in_port(1, 4).
has_in_port(1, 5).
has_in_port(1, 6).
has_in_port(1, 7).
has_in_port(1, 8).
has_in_port(1, 9).
has_in_port(1, 10).
has_in_port(1, 11).
has_in_port(1, 12).
has_in_port(1, 13).
has_in_port(2, 15).
has_in_port(2, 16).
has_in_port(2, 17).
has_in_port(3, 19).
has_in_port(3, 20).
has_in_port(3, 21).
has_in_port(3, 22).
has_in_port(3, 23).
has_in_port(4, 25).
has_in_port(4, 26).
has_in_port(4, 27).
has_in_port(5, 29).
has_in_port(5, 30).
has_in_port(5, 31).
has_in_port(6, 33).
has_in_port(6, 34).
has_in_port(6, 35).
has_in_port(6, 36).
has_in_port(7, 38).
has_in_port(7, 39).
has_in_port(7, 40).
has_in_port(8, 42).
has_in_port(8, 43).
has_in_port(8, 44).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 14).
has_out_port(2, 18).
has_out_port(3, 24).
has_out_port(4, 28).
has_out_port(5, 32).
has_out_port(6, 37).
has_out_port(7, 41).
has_out_port(8, 45).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'col-name:call_number', 'col-name:call_number').
data(2, 'oldColumnName:sponsor', 'oldColumnName:sponsor').
data(3, 'removeOriginalColumn:true', 'removeOriginalColumn:true').
data(4, 'expression:value.toDate()', 'expression:value.toDate()').
data(5, 'expression:value.toLowercase()', 'expression:value.toLowercase()').
data(6, 'col-name:dish_count', 'col-name:dish_count').
data(7, 'col-name:Sponsor', 'col-name:Sponsor').
data(8, 'col-name:date', 'col-name:date').
data(9, 'newColumnName:Sponsor', 'newColumnName:Sponsor').
data(10, 'expression:value.toNumber()', 'expression:value.toNumber()').
data(11, 'separator:"-"', 'separator:"-"').
data(12, 'expression:value.trim()', 'expression:value.trim()').
data(13, 'table0', 'table0').
data(14, 'table7', 'table7').
data(15, 'oldColumnName:sponsor', 'BCLinearOriginalOR#.oldColumnName:sponsor').
data(16, 'newColumnName:Sponsor', 'BCLinearOriginalOR#.newColumnName:Sponsor').
data(17, 'table0', 'BCLinearOriginalOR#.table0').
data(18, 'table1', 'BCLinearOriginalOR#.table1').
data(19, 'col-name:Sponsor', 'BCLinearOriginalOR#.col-name:Sponsor').
data(20, 'cluster-type:binning', 'BCLinearOriginalOR#.cluster-type:binning').
data(21, 'cluster-params:20', 'BCLinearOriginalOR#.cluster-params:20').
data(22, 'cluster-function:fingerprint', 'BCLinearOriginalOR#.cluster-function:fingerprint').
data(23, 'table2', 'BCLinearOriginalOR#.table2').
data(24, 'expression:value.trim()', 'BCLinearOriginalOR#.expression:value.trim()').
data(25, 'table3', 'BCLinearOriginalOR#.table3').
data(26, 'expression:value.toLowercase()', 'BCLinearOriginalOR#.expression:value.toLowercase()').
data(27, 'table4', 'BCLinearOriginalOR#.table4').
data(28, 'col-name:call_number', 'BCLinearOriginalOR#.col-name:call_number').
data(29, 'separator:"-"', 'BCLinearOriginalOR#.separator:"-"').
data(30, 'removeOriginalColumn:true', 'BCLinearOriginalOR#.removeOriginalColumn:true').
data(31, 'table5', 'BCLinearOriginalOR#.table5').
data(32, 'col-name:dish_count', 'BCLinearOriginalOR#.col-name:dish_count').
data(33, 'expression:value.toNumber()', 'BCLinearOriginalOR#.expression:value.toNumber()').
data(34, 'table6', 'BCLinearOriginalOR#.table6').
data(35, 'col-name:date', 'BCLinearOriginalOR#.col-name:date').
data(36, 'expression:value.toDate()', 'BCLinearOriginalOR#.expression:value.toDate()').
data(37, 'table7', 'BCLinearOriginalOR#.table7').

% FACT: channel(channel_id, data_id).
channel(1, 14).
channel(2, 15).
channel(3, 16).
channel(4, 17).
channel(5, 19).
channel(6, 19).
channel(7, 19).
channel(8, 18).
channel(9, 24).
channel(10, 23).
channel(11, 26).
channel(12, 25).
channel(13, 28).
channel(14, 29).
channel(15, 30).
channel(16, 27).
channel(17, 32).
channel(18, 33).
channel(19, 31).
channel(20, 35).
channel(21, 36).
channel(22, 34).
channel(23, 1).
channel(24, 2).
channel(25, 3).
channel(26, 4).
channel(27, 5).
channel(28, 6).
channel(29, 7).
channel(30, 7).
channel(31, 7).
channel(32, 8).
channel(33, 9).
channel(34, 10).
channel(35, 11).
channel(36, 12).
channel(37, 13).
channel(38, 37).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(45, 1).
port_connects_to_channel(15, 2).
port_connects_to_channel(16, 3).
port_connects_to_channel(17, 4).
port_connects_to_channel(19, 5).
port_connects_to_channel(25, 6).
port_connects_to_channel(29, 7).
port_connects_to_channel(18, 8).
port_connects_to_channel(23, 8).
port_connects_to_channel(26, 9).
port_connects_to_channel(24, 10).
port_connects_to_channel(27, 10).
port_connects_to_channel(30, 11).
port_connects_to_channel(28, 12).
port_connects_to_channel(31, 12).
port_connects_to_channel(33, 13).
port_connects_to_channel(34, 14).
port_connects_to_channel(35, 15).
port_connects_to_channel(32, 16).
port_connects_to_channel(36, 16).
port_connects_to_channel(38, 17).
port_connects_to_channel(39, 18).
port_connects_to_channel(37, 19).
port_connects_to_channel(40, 19).
port_connects_to_channel(42, 20).
port_connects_to_channel(43, 21).
port_connects_to_channel(41, 22).
port_connects_to_channel(44, 22).
port_connects_to_channel(33, 23).
port_connects_to_channel(15, 24).
port_connects_to_channel(35, 25).
port_connects_to_channel(43, 26).
port_connects_to_channel(30, 27).
port_connects_to_channel(38, 28).
port_connects_to_channel(19, 29).
port_connects_to_channel(25, 30).
port_connects_to_channel(29, 31).
port_connects_to_channel(42, 32).
port_connects_to_channel(16, 33).
port_connects_to_channel(39, 34).
port_connects_to_channel(34, 35).
port_connects_to_channel(26, 36).
port_connects_to_channel(17, 37).
port_connects_to_channel(45, 38).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(2, 2).
inflow_connects_to_channel(9, 3).
inflow_connects_to_channel(13, 4).
inflow_connects_to_channel(7, 5).
inflow_connects_to_channel(7, 6).
inflow_connects_to_channel(7, 7).
inflow_connects_to_channel(12, 9).
inflow_connects_to_channel(5, 11).
inflow_connects_to_channel(1, 13).
inflow_connects_to_channel(11, 14).
inflow_connects_to_channel(3, 15).
inflow_connects_to_channel(6, 17).
inflow_connects_to_channel(10, 18).
inflow_connects_to_channel(8, 20).
inflow_connects_to_channel(4, 21).
inflow_connects_to_channel(1, 23).
inflow_connects_to_channel(2, 24).
inflow_connects_to_channel(3, 25).
inflow_connects_to_channel(4, 26).
inflow_connects_to_channel(5, 27).
inflow_connects_to_channel(6, 28).
inflow_connects_to_channel(7, 29).
inflow_connects_to_channel(7, 30).
inflow_connects_to_channel(7, 31).
inflow_connects_to_channel(8, 32).
inflow_connects_to_channel(9, 33).
inflow_connects_to_channel(10, 34).
inflow_connects_to_channel(11, 35).
inflow_connects_to_channel(12, 36).
inflow_connects_to_channel(13, 37).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(14, 1).
outflow_connects_to_channel(14, 38).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).

% FACT: assert(program_id, subject_id, predicate, object_id).

