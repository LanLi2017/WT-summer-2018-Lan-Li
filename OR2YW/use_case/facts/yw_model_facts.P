% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'OpenRefine2YW', 'OpenRefine2YW', 1, 20).
program(2, 'import_json', 'OpenRefine2YW/import_json', 8, 12).
program(3, 'extract_operation', 'OpenRefine2YW/extract_operation', 13, 19).

% FACT: workflow(program_id).
workflow(1).

% FACT: function(program_id).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(1, 3).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'data_path', 'OpenRefine2YW<-data_path', 2, 1).
port(2, 'out', 'operation_name', 'OpenRefine2YW->operation_name', 5, 2).
port(3, 'out', 'operation_method_name', 'OpenRefine2YW->operation_method_name', 6, 3).
port(4, 'out', 'operation_target', 'OpenRefine2YW->operation_target', 7, 4).
port(5, 'in', 'json_path', 'OpenRefine2YW/import_json<-json_path', 9, 5).
port(6, 'out', 'data', 'OpenRefine2YW/import_json->data', 10, 6).
port(7, 'in', 'raw_json_file', 'OpenRefine2YW/extract_operation<-raw_json_file', 15, 6).
port(8, 'out', 'operation_name', 'OpenRefine2YW/extract_operation->operation_name', 16, 7).
port(9, 'out', 'operation_method_name', 'OpenRefine2YW/extract_operation->operation_method_name', 17, 8).
port(10, 'out', 'operation_target', 'OpenRefine2YW/extract_operation->operation_target', 18, 9).

% FACT: port_alias(port_id, alias).
port_alias(1, 'json_path').
port_alias(6, 'raw_json_file').

% FACT: port_uri_template(port_id, uri).
port_uri_template(1, 'file:data.json').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(2, 5).
has_in_port(3, 7).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 2).
has_out_port(1, 3).
has_out_port(1, 4).
has_out_port(2, 6).
has_out_port(3, 8).
has_out_port(3, 9).
has_out_port(3, 10).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'json_path', 'json_path').
data(2, 'operation_name', 'operation_name').
data(3, 'operation_method_name', 'operation_method_name').
data(4, 'operation_target', 'operation_target').
data(5, 'json_path', 'OpenRefine2YW.json_path').
data(6, 'raw_json_file', 'OpenRefine2YW.raw_json_file').
data(7, 'operation_name', 'OpenRefine2YW.operation_name').
data(8, 'operation_method_name', 'OpenRefine2YW.operation_method_name').
data(9, 'operation_target', 'OpenRefine2YW.operation_target').

% FACT: channel(channel_id, data_id).
channel(1, 2).
channel(2, 3).
channel(3, 4).
channel(4, 5).
channel(5, 6).
channel(6, 1).
channel(7, 7).
channel(8, 8).
channel(9, 9).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(8, 1).
port_connects_to_channel(9, 2).
port_connects_to_channel(10, 3).
port_connects_to_channel(5, 4).
port_connects_to_channel(6, 5).
port_connects_to_channel(7, 5).
port_connects_to_channel(5, 6).
port_connects_to_channel(8, 7).
port_connects_to_channel(9, 8).
port_connects_to_channel(10, 9).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(1, 4).
inflow_connects_to_channel(1, 6).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(2, 1).
outflow_connects_to_channel(3, 2).
outflow_connects_to_channel(4, 3).
outflow_connects_to_channel(2, 7).
outflow_connects_to_channel(3, 8).
outflow_connects_to_channel(4, 9).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).

% FACT: log_template(log_template_id, port_id, entry_template, log_annotation_id).

% FACT: log_template_variable(log_variable_id, variable_name, log_template_id).

% FACT: assert(program_id, subject_id, predicate, object_id).

